name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ou a branch que você quiser monitorar
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install
        env:
          NODE_ENV: test

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  e2e_tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Cypress
        uses: cypress-io/github-action@v2
        with:
          start: npm start  # Comando para iniciar seu app (se necessário)
          wait-on: 'http://localhost:3000'  # URL do seu app
          wait-on-timeout: 60

      - name: Run Cypress tests
        run: npm run cypress:run

      - name: Generate Cypress report
        run: npm run cypress:report  # Certifique-se que este comando esteja no package.json

      - name: Upload Cypress report
        uses: actions/upload-artifact@v2
        with:
          name: cypress-report
          path: cypress/reports/finalReport  # Caminho para o relatório

  load_tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run load tests with K6
        run: |
          npm run load_tests:k6
          npm run stress_tests:k6

      - name: Upload K6 reports
        uses: actions/upload-artifact@v2
        with:
          name: k6-reports
          path: reports/k6  # Caminho para os relatórios K6
